<%= stylesheet_link_tag "hoverscroll" %>

<script>

//SHARED GLOBALS
var mainGrid = [];
var GRID_SIZE = 20;
var GRID_HEIGHT = 10;
var VOXEL_SIZE = 50;

var objectMeshes = [];
var sceneObjects = [];
var currSceneID = 0;

//RENDERING 
var container;
var camera, scene, renderer;
var canvas_width, canvas_height;
var theta = 45 * 0.5;

var projector, plane, cube;
var mouse2D, mouse3D, raycaster;
var shiftDown = false, ctrlDown = false;
var rollOveredFace;

var rollOverMesh, rollOverMaterial;

var currPos = new THREE.Vector3(), tmpVec = new THREE.Vector3(), normalMatrix = new THREE.Matrix3();

var cubeGeo, cubeMaterial;
var i, intersector;

var voxelPosition = new THREE.Vector3();

var objLoader;
// var jsonLoader = new THREE.JSONLoader();

$(function(){
	$("#toolbox").organicTabs({ });

	$('.scroll-div').hoverscroll({fixedArrows: true, width: 800, height: 105});
	// Starting the movement automatically at loading
	// @param direction: right/bottom = 1, left/top = -1
	// @param speed: Speed of the animation (scrollPosition += direction * speed)
	var direction = 0, speed = 0;
	$(".scroll-div")[0].startMoving(direction, speed);
	
	if ( ! Detector.webgl ) 
		Detector.addGetWebGLMessage();

	// initialize grid with nulls
	mainGrid = new Array(GRID_SIZE);
	for ( var x = 0; x < GRID_SIZE; x++ ) {
		mainGrid[x] = new Array(GRID_SIZE);
		for ( var y = 0; y < GRID_SIZE; y++ ) {
			mainGrid[x][y] = new Array(GRID_HEIGHT);
		}
	}

	// Currently prints to console, but could potentially be used to load object on click. 
	$(".object").click(
		function(){
			setCurrentObject( $(this).attr('id') );
		}
	);

	//DISPLAY
	initGraphics();
	
	$.ajax({
		url: '/home/get_all_objects',
		dataType: 'json',
		data: { },
		success: function( obj ){
			loadObjects(obj);
		}
	});

	// Testing constructor: 
	objectPropertyID = 4;
	objectPosition = [0,0,0];
	for (var i = 0; i < 4; i ++) {
		console.log("Sending a property ID of " + objectPropertyID);
		var block = new RubeJect(objectPropertyID, objectPosition, i);
		
		console.log(block.name + "; " + block.blockList[0]);
		console.log(block.name + "; " + block.blockList[1]);
		console.log(block.name + "; " + block.blockList[2]);
		console.log(block.name + "; " + block.blockList[3]);
		
	}
	animate();
});

</script>
<div id='grid_container'>
</div>

<div id="toolbox">
					
	<ul class="nav">
		<li class="nav-one"><a href="#cat1" class="current">Inerts</a></li>
		<li class="nav-two"><a href="#cat2">Roamers</a></li>
		<li class="nav-three"><a href="#cat3">Carriers</a></li>
		<li class="nav-four"><a href="#cat4">Gadgets</a></li>
	</ul>
    		
    <div class="list-wrap">
    	<div id="cat1">    		
    		<%= render :partial => "tabs", :locals => {:tabset => @inerts}  %>
    	</div>
        		 
       	<div id="cat2" class="hide">
    		<%= render :partial => "tabs", :locals => {:tabset => @roamers}  %>
    	</div>

		<div id="cat3" class="hide">
	    	<%= render :partial => "tabs", :locals => {:tabset => @carriers}  %>
		</div>

		<div id="cat4" class="hide">
	   		<%= render :partial => "tabs", :locals => {:tabset => @gadgets}  %>
		</div>

	</div> <!-- END List Wrap -->
</div> <!-- END toolbox  -->	


